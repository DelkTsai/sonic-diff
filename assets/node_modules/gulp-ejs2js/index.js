var through = require('through2');
var path = require('path');
var gutil = require('gulp-util');
var PluginError = gutil.PluginError;

//插件名称
const PLUGIN_NAME = 'gulp-ejs2js';

/**
 * 文件流转字符串
 * @param prefixText
 */
function prefixStream(prefixText) {
    var stream = through();
    stream.write(prefixText);
    return stream;
}

/**
 * 转换模板代码为function
 * @param {String} code 子模板源码
 * @author jameszuo
 */
function codeToFunction(code) {
    if (!code) {
        return "function(){return ''}";
    }

    var regCode = /(?:(?:\r\n|\r|\n)\s*?)?<%([\-=]?)([\w\W\r\n]*?)%>(?:\r\n|\r|\n)?/gmi,
        index = 0,
        exec,
        len,
        res = ['var __p=[],_p=function(s){__p.push(s)};\n'],
        jscode,
        eq;

    while (exec = regCode.exec(code)) {

        len = exec[0].length;

        if (index !== exec.index) {
            res.push(";_p('");
            res.push(
                code
                    .slice(index, exec.index)
                    .replace(/\\/gmi, "\\\\")
                    .replace(/'/gmi, "\\'")
                    .replace(/\r\n|\r|\n/g, "\\r\\n\\\r\n")
            );
            res.push("');\r\n");
        }

        index = exec.index + len;

        eq = exec[1];
        jscode = exec[2];

        // escape html
        if (eq === '=') {
            res.push(';_p(__e(');
            res.push(jscode);
            res.push('));\r\n');
        }
        // no escape
        else if (eq === '-') {
            res.push(';_p(');
            res.push(jscode);
            res.push(');\r\n');
        } else {
            res.push(jscode);
        }
    }

    res.push(";_p('");
    res.push(
        code
            .slice(index)
            .replace(/\\/gmi, "\\\\")
            .replace(/'/gmi, "\\'")
            .replace(/\r\n|\r|\n/g, "\\r\\n\\\r\n")
    );
    res.push("');", '\r\n\r\n', 'return __p.join("");\r\n}', ',\r\n\r\n');
    res.length--;

    return ['function (data, children) {\r\n', 'data=data||{},children=children||{};\r\n', res.join('')].join('');
}

/**
 * ejs2js
 * @param opt
 */
module.exports = function (opt) {
    opt = opt || {};

    //预分配空间
    var prefixText = new Buffer('');

    //参数是gulp固定的through会自动传入
    function doSomething(file, encoding, callback) {

        if (file.isNull()) {
            //返回空文件
            return callback(null, file);
        }

        if (file.isStream()) {
            //console.log('isStream');
            file.contents = file.contents.pipe(prefixStream(prefixText));
        }

        if (file.isBuffer()) {
            //console.log('isBuffer');
            file.contents = Buffer.concat([prefixText, file.contents]);
        }

        //do something
        var fileName = path.basename(file.path);

        var contents = file.contents.toString();

        var newContents =
            ';(function(){' +
            'var ' +
            "__a={'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#39;'},\n" +
            '__b=/[&<>"\']/g,\n' +
            '__e=function (s) {s = String(s);return s.replace(__b, function (m) {return __a[m]});};\n\n' +
            'module.exports = ' +
            codeToFunction(contents) +
            ';' +
            '})();';


        file.contents = new Buffer(newContents);
        file.path = file.path.replace(".ejs", ".js");

        callback(null, file);
    }

    //gulp文件流通道
    return through.obj(doSomething);
};
